dplyr::select(start,go) %>% as.matrix()
capture_output(fit <- beta_nd_nhpp(r = r, n_j = n_j,
tau_sd = 1, mu_sd = 1,
L = 2, K = 2,
iter_max = 30,
warm_up = 5,
thin = 1,
seed = 34143))
testthat::capture_output(fit <- beta_nd_nhpp(r = r, n_j = n_j,
tau_sd = 1, mu_sd = 1,
L = 2, K = 2,
iter_max = 30,
warm_up = 5,
thin = 1,
seed = 34143))
testthat::capture_output(fit <- beta_nd_nhpp(distances_col = "distances", id_col = "school_id",
tau_sd = 1, mu_sd = 1,
L = 2, K = 2,
iter_max = 30,
warm_up = 5,
thin = 1,
seed = 34143))
testthat::capture_output(fit <- beta_nd_nhpp(distances_col = "distances", id_col = "school_id", data = school_data,
tau_sd = 1, mu_sd = 1,
L = 2, K = 2,
iter_max = 30,
warm_up = 5,
thin = 1,
seed = 34143))
library(bendr)
capture.output(fit <- nd_nhpp_fixed(distances_col = "distances",
id_col = "school_id",
data = school_data,
L = 2, K = 2,
iter_max = 30,
warm_up = 5,
thin = 1,
seed = 34143))
library(bendr)
capture.output(fit <- nd_nhpp_fixed(distances_col = "distances",
id_col = "school_id",
data = school_data,
L = 2, K = 2,
iter_max = 30,
warm_up = 5,
thin = 1,
seed = 34143))
library(bendr)
pkgdown::build_site()
pkgdown::build_site()
library(bendr)
pkgdown::build_site()
pkgdown::build_home()
install.packages("HexSticker")
install.packages("Hexsticker")
install.packages("hexSticker")
model <- readRDS(file = "~/Documents/NDP_CA/server_model/normal_fit.rds")
bendr::plot_cluster_densities(model)
p <- bendr::plot_cluster_densities(model,pi_threshold=0.01)
p <- bendr::plot_cluster_densities(model,pi_threshold=0.01,transform=TRUE)
p
p <- bendr::plot_cluster_densities(model,pi_threshold=0.01,switch="color")
p
p + theme_void()
p + ggplot2::theme_void()
p + ggplot2::theme_void() + theme(legend.position = 'none') + ggtitle("")
p + ggplot2::theme_void() + ggplot2::theme(legend.position = 'none') + ggplot2::ggtitle("")
p <- p + ggplot2::theme_void() + ggplot2::theme(legend.position = 'none') + ggplot2::ggtitle("")
p
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Raleway")
install.packages("sysfonts")
library(showtext)
## Automatically use showtext to render text for future devices
showtext_auto()
hexSticker::sticker(p, package="bendr", p_size = 7, p_x = 1, p_y = 1.5,
s_x=1, s_y=1, s_width=1.3, s_height=1,
h_fill = "#f9fcfc", h_color = "#060707",
p_color = "black", p_family = "Raleway",
filename="Desktop/bendr_hex.png")
hexSticker::sticker(p, package="bendr", p_size = 7, p_x = 1, p_y = 1.5,
s_x=1, s_y=1, s_width=1.3, s_height=1,
h_fill = "#f9fcfc", h_color = "#060707",
p_color = "black",# p_family = "Raleway",
filename="Desktop/bendr_hex.png")
model <- readRDS(file = "~/Documents/NDP_CA/server_model/normal_fit.rds")
p <- bendr::plot_cluster_densities(model,pi_threshold=0.01,switch="color")
p <- p + ggplot2::theme_void() + ggplot2::theme(legend.position = 'none') + ggplot2::ggtitle("")
library(showtext)
## Loading Google fonts (http://www.google.com/fonts)
font_add_google("Raleway")
## Automatically use showtext to render text for future devices
showtext_auto()
hexSticker::sticker(p, package="bendr", p_size = 7, p_x = 1, p_y = 1.5,
s_x=1, s_y=1, s_width=1.3, s_height=1,
h_fill = "#f9fcfc", h_color = "#060707",
p_color = "black",# p_family = "Raleway",
filename="Desktop/bendr_hex.png")
hexSticker::sticker(p, package="bendr", p_size = 7, p_x = 1, p_y = 1.5,
s_x=1, s_y=1, s_width=1.3, s_height=1,
h_fill = "#f9fcfc", h_color = "#060707",
p_color = "black",# p_family = "Raleway",
filename="~/Desktop/bendr_hex.png")
library(bendr)
library(dplyr)
library(ggplot2)
library(tidyr)
set.seed(3431)
R <- 5
d <- seq(from=0,to=R,by=0.01)
f_1 <- function(x) 2*((1/2)*dbeta(x/R,1,8) + (1/2)*dbeta(x/R,6,1))
f_2 <- function(x) 2*((1/5)*dbeta(x/R,3,2) + (2/3)*dbeta(x/R,3,1) + (2/15)*dbeta(x/R,1,1))
f_3 <- function(x) 2*((1/2)*dbeta(x/R,8,2) + (1/2)*dbeta(x/R,30,50))
pltdf <- tibble(Distance = d,
Intensity = f_1(d),
Cluster = 1) %>%
rbind(.,tibble(Distance = d,
Intensity = f_2(d),
Cluster = 2)) %>%
rbind(.,tibble(Distance = d,
Intensity = f_3(d),
Cluster = 3))
pltdf %>% ggplot(aes(x=Distance,y=Intensity)) + geom_line() +
facet_wrap(~Cluster) + theme_bw() +
theme(strip.background = element_blank()) +
ggtitle("Intensity Functions") + xlab("Distance (mi)")
num_schools <- 50
schools_1 <- rnhpp(nsim = num_schools,
lambda = function(y) f_1(y),
interval = c(0,R),seed = 3431,
max =max(f_1(d)))
schools_2 <- rnhpp(nsim = num_schools,
lambda = function(y) f_2(y),
interval = c(0,R),
seed = 3431,
max = max(f_2(d)))
schools_3 <- rnhpp(nsim = num_schools,
lambda = function(y) f_3(y) ,
interval = c(0,R),
seed = 3431,
max = max(f_3(d)))
school_data <- as_tibble(schools_1)
school_data <- rbind(school_data,as_tibble(schools_2) %>%
mutate(sim_id = sim_id + num_schools)) %>%
mutate(density = ifelse(sim_id<=num_schools,1,2) )
school_data <- rbind(school_data,schools_3 %>% mutate(sim_id = sim_id + 2*num_schools, density=3)) %>%
rename(school_id = sim_id,
distances = event_times)
school_data %>% ggplot(aes(x=distances)) + geom_density() + facet_wrap(~density) +
theme_bw() + theme(strip.background = element_blank()) + xlab("Distance")
fit <- nd_nhpp_fixed(distances_col = "distances",
id_col = "school_id",
data = school_data,
L = 5, K = 5,
alpha = 1, rho = 1,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E4, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 4E4,
thin = 1,
seed = 34143)
df <- data.frame(y=school_data %>% group_by(school_id) %>% count() %>% pull(n))
reg_fit <- nhpp_hmc(y~1,data=df,iter_max=2E3,warm_up = 1E3)
reg_fit
reg_fit2 <- glm(y~1,data=df,family=poisson(link='log'))
reg_fit2
pkgdown::build_article()
pkgdown::build_article("Introduction")
library(bendr)
library(bendr)
library(dplyr)
library(ggplot2)
library(tidyr)
set.seed(3431)
R <- 5
d <- seq(from=0,to=R,by=0.01)
f_1 <- function(x) 2*((1/2)*dbeta(x/R,1,8) + (1/2)*dbeta(x/R,6,1))
f_2 <- function(x) 2*((1/5)*dbeta(x/R,3,2) + (2/3)*dbeta(x/R,3,1) + (2/15)*dbeta(x/R,1,1))
f_3 <- function(x) 2*((1/2)*dbeta(x/R,8,2) + (1/2)*dbeta(x/R,30,50))
pltdf <- tibble(Distance = d,
Intensity = f_1(d),
Cluster = 1) %>%
rbind(.,tibble(Distance = d,
Intensity = f_2(d),
Cluster = 2)) %>%
rbind(.,tibble(Distance = d,
Intensity = f_3(d),
Cluster = 3))
pltdf %>% ggplot(aes(x=Distance,y=Intensity)) + geom_line() +
facet_wrap(~Cluster) + theme_bw() +
theme(strip.background = element_blank()) +
ggtitle("Intensity Functions") + xlab("Distance (mi)")
num_schools <- 50
schools_1 <- rnhpp(nsim = num_schools,
lambda = function(y) f_1(y),
interval = c(0,R),seed = 3431,
max =max(f_1(d)))
schools_1 <- rnhpp(nsim = num_schools,
lambda = function(y) f_1(y),
interval = c(0,R),seed = 3431,
max =max(f_1(d)))
schools_2 <- rnhpp(nsim = num_schools,
lambda = function(y) f_2(y),
interval = c(0,R),
seed = 3431,
max = max(f_2(d)))
school_data <- as_tibble(schools_1)
school_data <- rbind(school_data,as_tibble(schools_2) %>%
mutate(sim_id = sim_id + num_schools)) %>%
mutate(density = ifelse(sim_id<=num_schools,1,2) )
school_data <- rbind(school_data,schools_3 %>% mutate(sim_id = sim_id + 2*num_schools, density=3)) %>%
rename(school_id = sim_id,
distances = event_times)
schools_3 <- rnhpp(nsim = num_schools,
lambda = function(y) f_3(y) ,
interval = c(0,R),
seed = 3431,
max = max(f_3(d)))
school_data <- as_tibble(schools_1)
school_data <- rbind(school_data,as_tibble(schools_2) %>%
mutate(sim_id = sim_id + num_schools)) %>%
mutate(density = ifelse(sim_id<=num_schools,1,2) )
school_data <- rbind(school_data,schools_3 %>% mutate(sim_id = sim_id + 2*num_schools, density=3)) %>%
rename(school_id = sim_id,
distances = event_times)
school_data %>% ggplot(aes(x=distances)) + geom_density() + facet_wrap(~density) +
theme_bw() + theme(strip.background = element_blank()) + xlab("Distance")
fit <- nd_nhpp_fixed(distances_col = "distances",
id_col = "school_id",
data = school_data,
L = 5, K = 5,
alpha = 1, rho = 1,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
install.packages("tidygraph","ggraph","ggmcmc")
install.packages(c("tidygraph","ggraph","ggmcmc"))
library(bendr)
X1 <- .5*rnorm(100,5,.6) + .5*rnorm(10,0.6)
X2 <- .5*rnorm(100,5,0.6) + .5*rnorm(0,0.6)
library(bendr)
?bendr
?nd_nhpp
dt <- data.frame(X = c(X1,X2),
id = 1:200)
fit <- nd_nhpp_fixed(distances_col = "X",
id_col = "id",
data = school_data,
L = 5, K = 5,
alpha = 1, rho = 1,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
dt <- data.frame(X = c(X1,X2),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",
id_col = "id",
data = school_data,
L = 5, K = 5,
alpha = 1, rho = 1,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
fit <- nd_nhpp(distances_col = "X",
id_col = "id",
data = dt,
L = 5, K = 5,
alpha = 1, rho = 1,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
fit <- nd_nhpp(distances_col = "X",
id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
plot_pairs(fit)
plot_pairs(fit,sort = T)
plot_global_density(fit)
hist(dt$X)
X1 <- .5*rnorm(100,5,.6) + .5*rnorm(10,0.6)
X2 <- .5*rnorm(100,5,0.6) + .5*rnorm(0,0.6)
dt <- data.frame(X = c(X1,X2),
id = 1:200)
X1 <- .5*rnorm(100,5,.6) + .5*rnorm(100,0.6)
X2 <- .5*rnorm(100,5,0.6) + .5*rnorm(100,0.6)
dt <- data.frame(X = c(X1,X2),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",
id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
plot_global_density(fit)
hist(dt$X)
X2
X1 <- .5*rnorm(100,5,.6) + .5*rnorm(100,10,0.6)
X2 <- .5*rnorm(100,5,0.6) + .5*rnorm(100,0,0.6)
dt <- data.frame(X = c(X1,X2),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",
id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
plot_global_density(fit)
plot_pairs(fit)
plot_cluster_densities(fit,switch = 'color')
i1 <- sample(c(0,1),size=100,replace=TRUE)
set.seed(234134)
i1 <- sample(c(0,1),size=100,replace=TRUE)
X1 <- i1*rnorm(100,5,.6) + (1-i1)*rnorm(100,10,0.6)
hist(X1)
i2 <- sample(c(0,1),size=100,replace=TRUE)
X2 <- i2*rnorm(100,5,0.6) + (1-i2)*rnorm(100,0,0.6)
hist(X2)
dt <- data.frame(X = c(X1,X2),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",
id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
?nd_nhpp()
nd_nhpp
fit <- nd_nhpp_fit(distances_col = "X",
id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3, ## To get good resolution, could possibly use more or less depending on convergence
warm_up = 5E2,
thin = 1,
seed = 34143)
library(bendr)
set.seed(234134)
i1 <- sample(c(0,1),size=100,replace=TRUE)
set.seed(234134)
i1 <- sample(c(0,1),size=100,replace=TRUE)
X1 <- i1*rnorm(100,5,.6) + (1-i1)*rnorm(100,10,0.6)
i2 <- sample(c(0,1),size=100,replace=TRUE)
X2 <- i2*rnorm(100,5,0.6) + (1-i2)*rnorm(100,0,0.6)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:200)
hist(dt$X)
?bendr::nd_nhpp
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3,
warm_up = 5E2,
thin = 1,
seed = 34143)
summary(c(X1,X2))
summary(pnorm(c(X1,X2)))
summary(qnorm(c(X1,X2)))
set.seed(234134)
i1 <- sample(c(0,1),size=50,replace=TRUE)
X1 <- i1*rnorm(50,5,.6) + (1-i1)*rnorm(50,10,0.6)
i2 <- sample(c(0,1),size=50,replace=TRUE)
X2 <- i2*rnorm(50,5,0.6) + (1-i2)*rnorm(50,0,0.6)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:200)
summary(c(X1,X2))
summary(pnorm(c(X1,X2)))
summary(qnorm(pnorm(c(X1,X2))))
set.seed(234134)
i1 <- sample(c(0,1),size=50,replace=TRUE)
X1 <- i1*rnorm(50,-1,.6) + (1-i1)*rnorm(50,2,0.6)
i2 <- sample(c(0,1),size=50,replace=TRUE)
X2 <- i2*rnorm(50,-1,0.6) + (1-i2)*rnorm(50,0,0.6)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:200)
library(tidyverse)
dt %>% ggplot(aes(x=X)) + geom_histogram()
dt %>% ggplot(aes(x=X)) + geom_density()
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3,
warm_up = 5E2,
thin = 1,
seed = 34143)
library(bendr)
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3,
warm_up = 5E2,
thin = 1,
seed = 34143)
plot_global_density(fit)
plot_pairs(fit)
plot_cluster_densities(fit)
plot_cluster_densities(fit,transform = F)
plot_cluster_densities(fit,transform = T)
set.seed(234134)
i1 <- sample(c(0,1),size=100,replace=TRUE)
X1 <- i1*rnorm(100,-1,.6) + (1-i1)*rnorm(100,2,0.6)
i2 <- sample(c(0,1),size=100,replace=TRUE)
X2 <- i2*rnorm(100,-1,0.6) + (1-i2)*rnorm(100,0,0.6)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E3,
warm_up = 5E2,
thin = 1,
seed = 34143)
plot_global_density(fit)
plot_global_density(fit,transform = TRUE)
plot_pairs(fit)
plot_cluster_densities(fit,transform = T)
fit
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 5E3,
warm_up = 2.5E3,
thin = 1,
seed = 34143)
plot_global_density(fit,transform = TRUE)
plot_pairs(fit)
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E4,
warm_up = 5E3,
thin = 1,
seed = 34143)
plot_global_density(fit,transform = TRUE)
plot_pairs(fit)
plot_cluster_densities(fit,transform = T)
hist(X1)
i1
i1*rnorm(100,-1,.6)
set.seed(234134)
i1 <- sample(c(0,1),size=1000,replace=TRUE)
X1 <- i1*rnorm(1000,-1,.6) + (1-i1)*rnorm(1000,2,0.6)
i2 <- sample(c(0,1),size=1000,replace=TRUE)
X2 <- i2*rnorm(1000,-1,0.6) + (1-i2)*rnorm(1000,0,0.6)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E4,
warm_up = 5E3,
thin = 1,
seed = 34143)
plot_global_density(fit,transform = TRUE)
plot_pairs(fit)
plot_cluster_densities(fit,transform = T)
hist(X1)
set.seed(234134)
i1 <- sample(c(0,1),size=1000,replace=TRUE)
X1 <- i1*rnorm(1000,-2,.6) + (1-i1)*rnorm(1000,2,0.6)
i2 <- sample(c(0,1),size=1000,replace=TRUE)
X2 <- i2*rnorm(1000,-2,0.6) + (1-i2)*rnorm(1000,0,0.6)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:200)
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E4,
warm_up = 5E3,
thin = 1,
seed = 34143)
dt <- data.frame(X = pnorm(c(X1,X2)),
id = 1:2000)
dt
fit <- nd_nhpp(distances_col = "X",id_col = "id",
data = dt,
L = 5, K = 5,
iter_max = 1E4,
warm_up = 5E3,
thin = 1,
seed = 34143)
plot_global_density(fit,transform = TRUE)
plot_pairs(fit)
plot_cluster_densities(fit,transform = T)
library(bendr)
formula.tools::lhs(ID ~ FFR)
formula.tools::rhs(ID ~ FFR)
formula.tools::rhs(ID ~ FFR + HFS)
formula.tools::rhs.vars(ID ~ FFR + HFS)
usethis::use_package("formula.tools")
