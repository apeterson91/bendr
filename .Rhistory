sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
gdensity
colnames(gdensity)
ncol(gdensity)
dim(object$fit$global_density)
length(object$d)
object$d
round(object$d,2)
round(object$d,3)
round(object$d,4)
round(object$d,5)
devtools::load_all(".")
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
colnames(fit$gdensity)
dim(fit$cluster_assignment)
fit$call
formula(fit$call)
devtools::load_all(".")
devtools::load_all(".")
devtools::document()
library(bendr)
?plot
?switch
library(bendr)
library(bendr)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
fit
devtools::load_all(".")
fit
fit$n
devtools::load_all(".")
devtools::load_all(".")
fit
plot(fit,plotfun="traceplot")
plot(fit,plotfun="trace")
devtools::load_all(".")
devtools::document()
library(bendr)
plot(fit,'trac')
plot(fit,'trace')
devtools::load_all(".")
plot(fit,'trace')
plot(fit,'trace',"rho")
summary(fit)
fit$n
debugonce(summary.ndp)
fit$n
summary(fit)
out
head(parmat)
as.matrix(object)[1:5,1:5]
library(bendr)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
fit
summary(fit)
school_data
debugonce(bend)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
length(dt$r)
dt$n
length(r)
length(dt$r)
1945+19
devtools::load_all(".")
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E2, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
fit
plot(fit)
summary(fit)
devtools::load_all(".")
summary(fit)
library(bendr)
summary(fit)
devtools::load_all(".")
summary(fit)
devtools::load_all(".")
summary(fit)
devtools::load_all(".")
summary(fit)
devtools::load_all(".")
summary(fit)
devtools::load_all(".")
summary(fit)
library(bendr)
formula.tools::rhs(school_id ~ normal(FFR))
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
mu_0 = 0, kappa_0 = 1, ## Normal Mean Base Measure Hyperparameters
sigma_0 = 1, nu_0 = 1, ## Inverse Chi square prior Hyperparameters
iter_max = 5E2, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
fit
summary(fit)
devtools::load_all(".")
summary(fit)
devtools::load_all(".")
summary(fit)
s <- summary(fit)
colnames(s)
head(s)
devtools::load_all(".")
summary(fit)
?names
devtools::document()
library(bendr)
fit
plot(fit,'pairs')
fit$pmat
fit$pmatddf
fit$ddf
fit$w
devtools::load_all(".")
library(bendr)
ITER <- 10
fit  <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = ITER, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
fit  <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = beta_measure(),
iter_max = ITER, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
library(bendr)
fit  <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = beta_measure(),
iter_max = ITER, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
traceback()
devtools::load_all(".")
fit  <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = beta_measure(),
iter_max = ITER, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
devtools::load_all(".")
fit  <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = beta_measure(),
iter_max = ITER, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
plot(fit)
fit
fit
fit$kdensity
library(bendr)
summary(fit)
nsamples(fit)
sessionInfo()
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
plot(fit)
plot(fit,'pairs')
fit$pmat
fit$pmat[lower.tri(fit$pmat)]
colnames(fit$pmat)
devtools::load_all(".")
plot(fit,'pairs')
debugonce(plot_pairs)
plot(fit,'pairs')
dplyr::as_tibble(P[A,A])
devtools::load_all(".")
plot(fit,'pairs')
library(bendr)
plot(fit,'pairs')
debugonce(plot)
plot(fit,'pairs')
dplyr::as_tibble(P[A,A]) %>%
dplyr::mutate(Group_ix = 1:dplyr::n())
dplyr::as_tibble(P[A,A]) %>% dplyr::mutate(Group_ix = 1:dplyr::n()) %>% tidyr::gather(dplyr::contains("Group_"), key = "Group_2", value = "Probability")
devtools::load_all(".")
plot(fit,'pairs')
devtools::load_all(".")
devtools::load_all(".")
plot(fit,'pairs')
library(bendr)
plot(fit,'pairs')
library(bendr)
library(dplyr)
library(ggplot2)
library(tidyr)
pi_lbls <- grep(x=rownames(summary(fit)),pattern = "pi",value = T)
summary(fit)[pi_lbls,]
nsamples(fit)
rstantools::nsamples(fit)
plot(fit)
fit$alpha
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
plot(fit)
plot(fit,'global')
plot(fit,'global',transform= T)
summary(fit)
library(bendr)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
fit
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = beta_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
plot(fit)
plot(fit,'pairs')
# Libraries ---------------------------------------------------------------
library(bendr)
library(dplyr)
# Data Generation ---------------------------------------------------------
set.seed(3431)
R <- 5
d <- seq(from=0,to=R,by=0.01)
f_1 <- function(x) 2*((1/2)*dbeta(x/R,1,8) + (1/2)*dbeta(x/R,6,1))
f_2 <- function(x) 2*((1/5)*dbeta(x/R,3,2) + (2/3)*dbeta(x/R,3,1) + (2/15)*dbeta(x/R,1,1))
f_3 <- function(x) 2*((1/2)*dbeta(x/R,8,2) + (1/2)*dbeta(x/R,30,50))
num_schools <- 50
schools_1 <- rnhpp(nsim = num_schools,
lambda = function(y) f_1(y),
interval = c(0,R),seed = 3431,
max =max(f_1(d)))
schools_2 <- rnhpp(nsim = num_schools,
lambda = function(y) f_2(y),
interval = c(0,R),
seed = 3431,
max = max(f_2(d)))
schools_3 <- rnhpp(nsim = num_schools,
lambda = function(y) f_3(y) ,
interval = c(0,R),
seed = 3431,
max = max(f_3(d)))
school_data <- as_tibble(schools_1) %>%
rename(school_id = sim_id,
distances=event_times) %>%
mutate(Intensity =1)
school_data <- rbind(school_data,
as_tibble(schools_2) %>%
mutate(school_id = sim_id + num_schools,
Intensity = 2) %>%
rename(distances=event_times) %>%
select(-sim_id)) %>%
rbind(.,as_tibble(schools_3) %>%
mutate(school_id = sim_id + num_schools,
Intensity = 3) %>%
rename(distances=event_times) %>%
select(-sim_id))
school_data <- rbenvo::benvo(subject_data = school_data %>%
select(-distances) %>%
mutate(school_id=as.integer(school_id)) %>%
distinct(school_id),
bef_data = list(FFR=school_data %>%
mutate(school_id=as.integer(school_id)) %>%
rename(Distance=distances)))
# Write Data --------------------------------------------------------------
usethis::use_data(school_data, overwrite = TRUE)
library(bendr)
school_data
plot(school_data)
debugonce(plot)
plot(school_data)
rbenvo::plot(school_data)
rbenvo::bef_summary(school_data)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
plot(fit)
plot(fit,'pairs')
school_data
# Libraries ---------------------------------------------------------------
library(bendr)
library(dplyr)
# Data Generation ---------------------------------------------------------
set.seed(3431)
R <- 5
d <- seq(from=0,to=R,by=0.01)
f_1 <- function(x) 2*((1/2)*dbeta(x/R,1,8) + (1/2)*dbeta(x/R,6,1))
f_2 <- function(x) 2*((1/5)*dbeta(x/R,3,2) + (2/3)*dbeta(x/R,3,1) + (2/15)*dbeta(x/R,1,1))
f_3 <- function(x) 2*((1/2)*dbeta(x/R,8,2) + (1/2)*dbeta(x/R,30,50))
num_schools <- 50
schools_1 <- rnhpp(nsim = num_schools,
lambda = function(y) f_1(y),
interval = c(0,R),seed = 3431,
max =max(f_1(d)))
schools_2 <- rnhpp(nsim = num_schools,
lambda = function(y) f_2(y),
interval = c(0,R),
seed = 3431,
max = max(f_2(d)))
schools_3 <- rnhpp(nsim = num_schools,
lambda = function(y) f_3(y) ,
interval = c(0,R),
seed = 3431,
max = max(f_3(d)))
school_data <- as_tibble(schools_1) %>%
rename(school_id = sim_id,
distances=event_times) %>%
mutate(Intensity =1)
school_data <- rbind(school_data,
as_tibble(schools_2) %>%
mutate(school_id = sim_id + num_schools,
Intensity = 2) %>%
rename(distances=event_times) %>%
select(-sim_id)) %>%
rbind(.,as_tibble(schools_3) %>%
mutate(school_id = sim_id + 2*num_schools,
Intensity = 3) %>%
rename(distances=event_times) %>%
select(-sim_id))
school_data <- rbenvo::benvo(subject_data = school_data %>%
select(-distances) %>%
mutate(school_id=as.integer(school_id)) %>%
distinct(school_id),
bef_data = list(FFR=school_data %>%
mutate(school_id=as.integer(school_id)) %>%
rename(Distance=distances)))
# Write Data --------------------------------------------------------------
usethis::use_data(school_data, overwrite = TRUE)
library(bendr)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
fix_concentration = TRUE, ## To avoid collapsing which sometimes occurs with simulated data
seed = 34143)
plot(fit)
plot_pairs(fit)
fit
summary(fit)
fit <- bend(school_id ~ FFR,
benvo = school_data,
L = 5, K = 5,
base_measure = normal_measure(),
iter_max = 5E3, ## To get good resolution, could possibly use more or less depending on convergence
thin = 1,
seed = 34143)
plot(fit)
plot(fit,'pairs')
summary(fit)
library(bendr)
library(bendr)
library(bendr)
library(bendr)
usethis::use_package("rstantools")
devtools::check(vignettes = FALSE)
devtools::document()
devtools::document()
devtools::check(vignettes = FALSE)
devtools::document()
devtools::check(vignettes = FALSE)
devtools::document()
devtools::check(vignettes = FALSE)
devtools::document()
library(bendr)
devtools::check(vignettes = FALSE)
devtools::check(vignettes = FALSE)
?median
devtools::document()
devtools::check(vignettes = FALSE)
usethis::use_package("abind")
usethis::use_package("bayesplot")
usethis::use_package("rstan")
devtools::check(vignettes = FALSE)
?plot_pairs
usethis::use_package("methods")
devtools::document()
library(bendr)
devtools::check(vignettes = FALSE)
devtools::document()
library(bendr)
devtools::check(vignettes = FALSE)
devtools::document()
pkgdown::build_site()
pkgdown::build_site()
pkgdown::build_home()
pkgdown::build_site()
pkgdown::build_site()
fit
devtools::load_all(".")
plot(fit,'global')
nsamples(fit)
plot(fit,"global",r=school_data@bef_data$FFR$Distance)
devtools::document()
library(bendr)
fit
plot(fit,'global')
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
usethis::use_package("patchwork")
?patchwork::`+`
?patchwork::patchGrob()
?patchwork::`&.gg`
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
devtools::load_all(".")
library(bendr)
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
ggplot2::ggplot(ggplot2::aes(x=r),data=school_data@bef_data$FFR) + ggplot2::geom_density()
ggplot2::ggplot(ggplot2::aes(x=Distance),data=school_data@bef_data$FFR) + ggplot2::geom_density()
devtools::load_all(".")
debugonce(plot)
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
debugonce(plot)
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
devtools::load_all(".")
library(bendr)
plot(fit)
plot(fit,'global')
plot(fit,'global',r=school_data@bef_data$FFR$Distance)
pkgdown::build_article("Introduction")
pkgdown::preview_site()
pkgdown::build_article("Introduction")
pkgdown::preview_site()
pkgdown::build_article("Introduction")
pkgdown::preview_site()
fit
ncol(as.matrix(fit))
devtools::check(document = FALSE)
devtools::check(vignettes = FALSE)
